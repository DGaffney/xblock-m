# syntax=docker/dockerfile:1
services:
  # caddy:
  #   container_name: caddy
  #   image: caddy:2
  #   network_mode: host
  #   depends_on:
  #     - ozone
  #   restart: unless-stopped
  #   volumes:
  #     - type: bind
  #       source: /ozone/caddy/data
  #       target: /data
  #     - type: bind
  #       source: /ozone/caddy/etc/caddy
  #       target: /etc/caddy
  #   labels:
  #     - 'com.centurylinklabs.watchtower.enable=true'
  # ozone:
  #   container_name: ozone
  #   image: ghcr.io/bluesky-social/ozone:0.1
  #   network_mode: host
  #   restart: unless-stopped
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   env_file:
  #     - /ozone/ozone.env
  #   labels:
  #     - 'com.centurylinklabs.watchtower.enable=true'
  # postgres:
  #   container_name: postgres
  #   image: postgres:14.11-bookworm
  #   network_mode: host
  #   restart: unless-stopped
  #   healthcheck:
  #     test: pg_isready -h localhost -U $$POSTGRES_USER
  #     interval: 2s
  #     timeout: 5s
  #     retries: 10
  #   volumes:
  #     - type: bind
  #       source: /ozone/postgres
  #       target: /var/lib/postgresql/data
  #   env_file:
  #     - /ozone/postgres.env
  # watchtower:
  #   container_name: watchtower
  #   image: containrrr/watchtower:latest
  #   network_mode: host
  #   volumes:
  #     - type: bind
  #       source: /var/run/docker.sock
  #       target: /var/run/docker.sock
  #   restart: unless-stopped
  #   environment:
  #     WATCHTOWER_CLEANUP: true
  #     WATCHTOWER_SCHEDULE: '@midnight'
  #     WATCHTOWER_LABEL_ENABLE: true
  redis:
    container_name: redis
    image: redis:7.4-bookworm
    restart: unless-stopped
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 2s
      timeout: 5s
      retries: 10
    volumes:
      - type: bind
        source: /xblock/redis
        target: /var/redis

  firehose:
    container_name: firehose
    image: aendra/xblock-firehose:latest
    depends_on:
      - redis
    volumes:
      - type: bind
        source: /xblock/redis
        target: /var/redis
    healthcheck:
      test: curl --fail http://queue:8000/ || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
  queue:
    container_name: queue
    image: aendra/xblock-processor:latest
    ports:
      - 8000:8000
    depends_on:
      - redis
    command: gunicorn -b queue -w 4 wsgi:app

  worker:
    container_name: worker
    image: aendra/xblock-processor:latest
    depends_on:
      - redis
      - queue
    command: rq worker --name worker --url redis://redis:6379/0

  dashboard:
    container_name: dashboard
    image: cjlapao/rq-dashboard:latest
    environment:
      - RQ_DASHBOARD_BIND=0.0.0.0
      - RQ_DASHBOARD_REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    ports:
      - 9181:9181